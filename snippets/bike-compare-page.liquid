{% style %}
  .compare-table__container {
    overflow-x: auto;
    margin-top: 3em;
    cursor: grab;
  }

  .compare-table__container table {
    border-radius: 10px;
    margin: 10px;
  }

  .compare-table__container table thead th {
    vertical-align: bottom;
  }

  .compare-table__container table tbody th {
    min-width: 150px;
    text-align: left;
  }
{% endstyle %}

<div class="compare-table__section page-width">
  <h1 class="main-page-title page-title h0 scroll-trigger animate--fade-in">{{ page_title }}</h1>
  <p style="max-width: 75ch;">
    Selecting the ideal electric bike tailored to your needs can be quite challenging. Take a look at the comprehensive
    breakdown below showcasing the complete Voltbike lineup. Here, you can efficiently compare key parameters such as
    battery capacity, motor strength, recommended rider weight, and more in a side-by-side comparison.
  </p>

  {% assign ebikes = collections['all-bikes'] %}

  <div id="draggable-table" class="compare-table__container">
    <table>
      <thead>
        <tr>
          <th scope="col empty"></th>
          {% for ebike in ebikes.products %}
            <th scope="col">
              <a href="{{- ebike.url -}}" alt="Link to {{- ebike.title -}} page." target="_blank">
                <img src="{{ ebike.featured_image | image_url: width: 150 }}" alt="{{ ebike.title | escape }} image">
                <span>{{- ebike.title }}</span>
              </a>
            </th>
          {% endfor %}
        </tr>
      </thead>
      <tbody>
        <tr>
          <th scope="row">Price</th>
          {% for ebike in ebikes.products %}
            <td>
              {{ ebike.price | money_with_currency }}
              {%- if ebike.price_varies -%}*Starting price{%- endif -%}
            </td>
          {% endfor %}
        </tr>
        <tr>
          <th scope="row">Motor Type</th>
          {%- for ebike in ebikes.products -%}
            <td>
              {{- ebike.metafields.specs.motor_type -}}
            </td>
          {%- endfor -%}
        </tr>
        <tr>
          <th scope="row">Motor</th>
          {%- for ebike in ebikes.products -%}
            <td>
              {{- ebike.metafields.specs.motor -}}
            </td>
          {%- endfor -%}
        </tr>
        <tr>
          <th scope="row">Battery</th>
          {%- for ebike in ebikes.products -%}
            <td>
              {{- ebike.metafields.specs.battery -}}
            </td>
          {%- endfor -%}
        </tr>
        <tr>
          <th scope="row">Frame Size</th>
          {%- for ebike in ebikes.products -%}
            <td>
              {{- ebike.metafields.sizing.frame_size -}}
            </td>
          {%- endfor -%}
        </tr>
        <tr>
          <th scope="row">Stand-over Height</th>
          {%- for ebike in ebikes.products -%}
            <td>
              {{- ebike.metafields.sizing.stand_over_height -}}
            </td>
          {%- endfor -%}
        </tr>
        <tr>
          <th scope="row">Weight</th>
          {%- for ebike in ebikes.products -%}
            <td>{{- ebike.variants.first.weight | weight_with_unit -}}</td>
          {%- endfor -%}
        </tr>
        <tr>
          <th scope="row">Rider Max Weight</th>
          {%- for ebike in ebikes.products -%}
            <td>{{- ebike.metafields.specs.rider_max_weight | weight_with_unit -}}</td>
          {%- endfor -%}
        </tr>
      </tbody>
    </table>
  </div>
</div>

<script>
  const el = document.getElementById('draggable-table');
  let isDown = false;
  let startX;
  let scrollLeft;
  let scrollSens = 1.5;

  el.addEventListener('mousedown', (e) => {
    isDown = true;
    el.style.cursor = 'grabbing';
    startX = e.pageX - el.offsetLeft;
    scrollLeft = el.scrollLeft;
  });

  el.addEventListener('mouseleave', () => {
    isDown = false;
    el.style.cursor = 'grab';
  });

  el.addEventListener('mouseup', () => {
    isDown = false;
    el.style.cursor = 'grab';
  });

  el.addEventListener('mousemove', (e) => {
    if (!isDown) return;
    e.preventDefault();
    const x = e.pageX - el.offsetLeft;
    const walk = (x - startX) * scrollSens;
    el.scrollLeft = scrollLeft - walk;
  });
</script>
